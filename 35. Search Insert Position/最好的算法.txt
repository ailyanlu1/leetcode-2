我的方法是O(n)的，没有想到可以用O(logn)的二分查找法


int searchInsert(vector<int>& nums, int target) {
    int start = 0, end = nums.size(), mid;
    while (start < end) {
        mid = (start + end) / 2;
        if (nums[mid] >= target)
            end = mid;
        else
            start = mid + 1;
    }
    return start;
}

1356,target=5
start==0,end==4
mid==2
nums[mid]==5
end==2
mid=1
nums[mid]==3
start==2


13567,target=5
start==0,end==5
mid==2